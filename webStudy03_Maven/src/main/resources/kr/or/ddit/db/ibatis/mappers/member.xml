<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Member">
	<sql id="selectMemberFrag">
		SELECT
		MEM_ID,MEM_PASS,MEM_NAME,MEM_REGNO1,MEM_REGNO2,
		TO_CHAR(MEM_BIR,'YYYY-MM-DD') MEM_BIR,MEM_ZIP,
		MEM_ADD1,MEM_ADD2,MEM_HOMETEL,MEM_COMTEL,
		MEM_HP,MEM_MAIL,MEM_JOB,MEM_LIKE,
		MEM_MEMORIAL,TO_CHAR(MEM_MEMORIALDAY,'YYYY-MM-DD') MEM_MEMORIALDAY,
		MEM_MILEAGE,MEM_DELETE, MEM_AUTH
		FROM MEMBER
	</sql>
	<sql id="searchFrag">
		<dynamic prepend="WHERE"> <!-- 하나라도 만족하는게 있으면 조건을 만들겠다라는 의미 -->
			<isNotEmpty property="searchWord">
				<isEqual property="searchType" compareValue="name">
					MEM_NAME LIKE '%' ||#searchWord#||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="address">
					MEM_ADD1 LIKE '%' ||#searchWord#||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="all">
					MEM_NAME LIKE '%' ||#searchWord#||'%'
					OR
					MEM_ADD1 LIKE '%' ||#searchWord#||'%'
				</isEqual>
			</isNotEmpty>
		</dynamic>
	</sql>
	
	<resultMap class="prodVO" id="prodMap">
		<result property="prod_id" column="PROD_ID"/>
		<result property="prod_name" column="PROD_NAME"/>
		<result property="prod_cost" column="PROD_COST"/>
		<result property="prod_price" column="PROD_PRICE"/>
		<result property="prod_outline" column="PROD_OUTLINE"/>
	</resultMap>
	<resultMap class="memberVO" id="memberMap" groupBy="mem_id">
		<result property="mem_auth" column="MEM_AUTH" />
		<result property="mem_id" column="MEM_ID" />
		<result property="mem_pass" column="MEM_PASS" />
		<result property="mem_name" column="MEM_NAME" />
		<result property="mem_regno1" column="MEM_REGNO1" />
		<result property="mem_regno2" column="MEM_REGNO2" />
		<result property="mem_bir" column="MEM_BIR" />
		<result property="mem_zip" column="MEM_ZIP" />
		<result property="mem_add1" column="MEM_ADD1" />
		<result property="mem_add2" column="MEM_ADD2" />
		<result property="mem_hometel" column="MEM_HOMETEL" />
		<result property="mem_comtel" column="MEM_COMTEL" />
		<result property="mem_hp" column="MEM_HP" />
		<result property="mem_mail" column="MEM_MAIL" />
		<result property="mem_job" column="MEM_JOB" />
		<result property="mem_like" column="MEM_LIKE" />
		<result property="mem_memorial" column="MEM_MEMORIAL" />
		<result property="mem_memorialday" column="MEM_MEMORIALDAY" />
		<result property="mem_mileage" column="MEM_MILEAGE" />
		<result property="mem_delete" column="MEM_DELETE" />
		<result property="prodList" resultMap="Member.prodMap" javaType="java.util.List"/>
	</resultMap>

	<select id="selectMember" parameterClass="string"
		resultMap="Member.memberMap">
		SELECT
		MEM_ID,MEM_PASS,MEM_NAME,MEM_REGNO1,MEM_REGNO2,
		TO_CHAR(MEM_BIR,'YYYY-MM-DD') MEM_BIR,MEM_ZIP,
		MEM_ADD1,MEM_ADD2,MEM_HOMETEL,MEM_COMTEL,
		MEM_HP,MEM_MAIL,MEM_JOB,MEM_LIKE,
		MEM_MEMORIAL,TO_CHAR(MEM_MEMORIALDAY,'YYYY-MM-DD') MEM_MEMORIALDAY,
		MEM_MILEAGE,MEM_DELETE, MEM_AUTH,
		PROD_ID, PROD_NAME, PROD_COST,
		PROD_PRICE, PROD_OUTLINE
		FROM MEMBER LEFT OUTER JOIN CART ON (MEM_ID = CART_MEMBER)
		LEFT OUTER JOIN PROD ON (CART_PROD = PROD_ID)
		WHERE MEM_ID=#mem_id#
	</select>

	<select id="selectTotalRecord" resultClass="long"
		parameterClass="pagingVO">
		SELECT COUNT(*)
		FROM MEMBER
		<include refid="Member.searchFrag" />
	</select>

	<select id="selectMemberList" resultClass="memberVO"
		parameterClass="pagingVO">
		select b.*
		from(
		select rownum rnum, a.*
		from (
		<include refid="Member.selectMemberFrag" />
		<include refid="Member.searchFrag" />
		ORDER BY ROWID DESC ) a ) b
		<![CDATA[
		where rnum >= #startRow# and rnum <= #endRow#
		]]>
	</select>
	<insert id="insertMember" parameterClass="memberVO">
		INSERT INTO member (
		MEM_ID, MEM_PASS, MEM_NAME, MEM_REGNO1,
		MEM_REGNO2, MEM_BIR, MEM_ZIP, MEM_ADD1,
		MEM_ADD2, MEM_HOMETEL, MEM_COMTEL, MEM_HP,
		MEM_MAIL, MEM_JOB, MEM_LIKE, MEM_MEMORIAL,
		MEM_MEMORIALDAY, MEM_MILEAGE, MEM_AUTH
		) VALUES (
		#mem_id#, #mem_pass#, #mem_name#, #mem_regno1#,
		#mem_regno2#, TO_DATE(#mem_bir#,'YYYY-MM-DD'), #mem_zip#, #mem_add1#,
		#mem_add2#, #mem_hometel#, #mem_comtel#, #mem_hp#,
		#mem_mail#, #mem_job#, #mem_like#, #mem_memorial#,
		TO_DATE(#mem_memorialday#,'YYYY-MM-DD'), 1000, 'ROLE_USER'
		)
	</insert>
	<update id="updateMember" parameterClass="memberVO">
		UPDATE member SET
		MEM_NAME=#mem_name#, MEM_ZIP=#mem_zip#, MEM_ADD1=#mem_add1#,
		MEM_ADD2=#mem_add2#, MEM_HOMETEL=#mem_hometel#,
		MEM_COMTEL=#mem_comtel#,
		MEM_HP=#mem_hp#, MEM_MAIL=#mem_mail#, MEM_JOB= #mem_job#, MEM_LIKE= #mem_like#,
		MEM_MEMORIAL=#mem_memorial#, MEM_MEMORIALDAY=
		TO_DATE(#mem_memorialday#,'YYYY-MM-DD')
		where MEM_ID=#mem_id# and MEM_PASS=#mem_pass#
	</update>
	<delete id="deleteMember" parameterClass="String">
		<!-- DELETE FROM member where MEM_ID=#mem_id# -->
		UPDATE MEMBER
		SET
		MEM_DELETE = 'Y'
		WHERE MEM_ID = #mem_id#
	</delete>
</sqlMap>
